name: Project List

on:
  push:
  schedule:
    - cron: '3 3 * * 6'
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  update-project-list:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10.7'

    - name: get the list
      id: project_list
      run: |
        info=$(curl https://api.github.com/users/hanbollar/repos?sort=created&direction=desc)

        THE_LIST=$(echo $info | python3 -c "import json,sys
        obj=json.load(sys.stdin)
        list=\"<br/>\"
        for item in obj:
          if item[\"private\"]:
            continue
          list=list + \"\" + item[\"created_at\"][:10] + \" : <a href='https://hanbollar.dev/\" + item[\"name\"] + \"'>\" + item[\"name\"] + \"</a><br/>\"
        print(list)
        ")

        echo $THE_LIST
        echo "the_list=$THE_LIST" >> $GITHUB_ENV

    - name: list
      run: |
        echo "${{ env.the_list }}"

    - name: cat 1
      run: |
        cat index.html
    
    - name: run the insert
      run: |
        # Function to find the last index of a substring in a string
        find_last_index() {
            string="$1"
            substring="$2"
            echo "${string##*$substring}" | awk "{print length(\$0)}"
        }
        find_first_index() {
            string="$1"
            substring="$2"
            echo $(expr index "$string" "$substring") 
        }

        cat index.html > input_string
        start_search_substring="<!-- BEGIN PROJECTS -->"
        end_search_substring="<!-- END PROJECTS -->"
        
        last_index_of_start=$(find_last_index "$input_string" "$search_substring")
        start_index_of_end=$(find_first_index "$input_string" "$end_search_substring")

        # Use parameter expansion to extract the substrings
        str0="${input_string:0:last_index_of_start+1}"
        str2="${input_string:start_index_of_end}"

        # Combine the substrings
        ${str0} > index.html
        echo "${{ env.the_list }}" >> index.html
        ${str2} >> index.html

    - name: cat 2
      run: |
        cat index.html

    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v12
      id: verify-changed-files
      with:
        files: index.html

    - name: push changes if any
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -am "[BOT] all them projects"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
